"""test 3

Revision ID: e341a652f5f9
Revises: a9bcc6712e2e
Create Date: 2024-01-26 12:58:57.283830

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e341a652f5f9'
down_revision = 'a9bcc6712e2e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('_password_hash', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('tanks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_tanks_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alkalinities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_alkalinities_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ammonias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_ammonias_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('calciums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_calciums_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ghs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_ghs_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('iodines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_iodines_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('magnesiums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_magnesiums_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nitrates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_nitrates_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nitrites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_nitrites_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pHs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_pHs_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('phosphates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_phosphates_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('salinities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_salinities_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('strontiums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_strontiums_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('temperatures',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('tank_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tank_id'], ['tanks.id'], name=op.f('fk_temperatures_tank_id_tanks')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('temperatures')
    op.drop_table('strontiums')
    op.drop_table('salinities')
    op.drop_table('phosphates')
    op.drop_table('pHs')
    op.drop_table('nitrites')
    op.drop_table('nitrates')
    op.drop_table('magnesiums')
    op.drop_table('iodines')
    op.drop_table('ghs')
    op.drop_table('calciums')
    op.drop_table('ammonias')
    op.drop_table('alkalinities')
    op.drop_table('tanks')
    op.drop_table('users')
    # ### end Alembic commands ###
